<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://m-x-k.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://m-x-k.github.io/" rel="alternate" type="text/html" /><updated>2018-01-06T17:39:20+00:00</updated><id>https://m-x-k.github.io/</id><title type="html">MXK Software Craftmanship</title><subtitle>Software craftmanship solutions covering various areas of Development, Architecture, Testing, Extreme Programming, Agile and DevOps.</subtitle><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><entry><title type="html">Building a monitoring dashboard with React and Python</title><link href="https://m-x-k.github.io/javascript/react/axios/Building-monitoring-dashboard-React-Python/" rel="alternate" type="text/html" title="Building a monitoring dashboard with React and Python" /><published>2018-01-05T11:00:00+00:00</published><updated>2018-01-05T11:00:00+00:00</updated><id>https://m-x-k.github.io/javascript/react/axios/Building-monitoring-dashboard-React-Python</id><content type="html" xml:base="https://m-x-k.github.io/javascript/react/axios/Building-monitoring-dashboard-React-Python/">&lt;p&gt;Recently I needed to build a custom monitoring dashboard to present some realtime system updates. The dashboard interface needed to be flexible and maintainable in order to be customised.&lt;/p&gt;

&lt;h3 id=&quot;codepenio-developing&quot;&gt;Codepen.io developing&lt;/h3&gt;

&lt;p&gt;As a quick mockup I created this &lt;a href=&quot;https://codepen.io/mxk/pen/WdEpVd?editors=0010&quot;&gt;codepen&lt;/a&gt; using the React and ReactDOM CDN. It uses a static hashmap to represent the individual services. The content was written using &lt;code class=&quot;highlighter-rouge&quot;&gt;JSX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ES7&lt;/code&gt; synatx so it also requires a &lt;code class=&quot;highlighter-rouge&quot;&gt;babel transpiler&lt;/code&gt; to convert before rendering.&lt;/p&gt;

&lt;p data-embed-version=&quot;2&quot; data-height=&quot;800&quot; data-preview=&quot;false&quot; data-theme-id=&quot;11473&quot; data-default-tab=&quot;result&quot; data-user=&quot;mxk&quot; data-slug-hash=&quot;WdEpVd&quot; class=&quot;codepen&quot;&gt;See the &lt;a href=&quot;https://codepen.io/mxk/pen/WdEpVd&quot;&gt;pen&lt;/a&gt; on &lt;a href=&quot;//codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;recommended-best-practices-for-react-development&quot;&gt;Recommended best practices for React development&lt;/h3&gt;

&lt;p&gt;I tried to follow some of the recommended best practices for React development. One the main points in React development is to split your components into two separate types:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Presentational&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;Are concerned with &lt;code class=&quot;highlighter-rouge&quot;&gt;how things look&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Should be written as functional components unless they need state, lifecycle hooks, or performance optimizations in which case Class is required&lt;/li&gt;
      &lt;li&gt;Examples: Page, Sidebar, Story, UserInfo, List&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Container&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;Are concerned with &lt;code class=&quot;highlighter-rouge&quot;&gt;how things work&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Provide the data and behavior to presentational or other container components&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;benefits-of-this-approach&quot;&gt;Benefits of This Approach&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Better separation of concerns&lt;/li&gt;
  &lt;li&gt;Better reusability&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

  &lt;p&gt;Aside from that I didn’t opt to use any state based frameworks such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Redux&lt;/code&gt;. To be honest I did look into this but the extra effort and complexity made this difficult to implement. I think one of the problems here is the use of different javascript syntax. As a result of recent enchancements into the core langauge from ES5, ES6, up to ES7 and combined with JSX syntax it can be very tricky to find examples to match your own. Personally I would be concerned if javascript was my core development language at the minute, the result overtime of such fragmentation in a language could make it difficult to maintain different code bases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;project-developing&quot;&gt;Project developing&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/m-x-k/mini-monitoring-dashboard&quot;&gt;Mini Monitoring Dashboard - GitHub Project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next stage was to combine the above changes into an all-in-one server side solution. For the most part this was just a copy and paste of the core HTML, CSS and JSX elements into my server side code base.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;I should point out that I intentionally opted for Python as my server side solution rather than use Nodejs. In hindsight it would have been more convenient to use Nodejs especially for support of Common JS modules but I knew that at some point this project was going to have to be integrated into another python code base.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;updating-jsx&quot;&gt;Updating JSX&lt;/h3&gt;

&lt;p&gt;With the dashboard code available in the python flask &lt;code class=&quot;highlighter-rouge&quot;&gt;templates&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; folders the next step was to provide a solution to transpile the ES7 and JSX syntax into a javascript file. If I had time I could have setup WebPack or some other javascript build tool to do this for me but since I was using Python this seemed overkill. My solution was to build the following script:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

npm install &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; babel-cli babel-plugin-transform-react-jsx babel-preset-es2017
babel src/static/js/app.jsx &lt;span class=&quot;nt&quot;&gt;--plugins&lt;/span&gt; transform-react-jsx &lt;span class=&quot;nt&quot;&gt;--presets&lt;/span&gt; es2017 &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; src/static/js/app.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;axios&quot;&gt;Axios&lt;/h3&gt;

&lt;p&gt;In the past for Ajax calls I would use &lt;code class=&quot;highlighter-rouge&quot;&gt;jQuery&lt;/code&gt; but these days its a little overkill when combined with other javascript frameworks. As an alternative I decided to go with &lt;code class=&quot;highlighter-rouge&quot;&gt;Axios&lt;/code&gt;. I created the following function to call the &lt;code class=&quot;highlighter-rouge&quot;&gt;/example&lt;/code&gt; endpoint asynchronously and set the state attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;services&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;fetchData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/example'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step was to periodically update the screen every 10 seconds or so. I could have just refreshed the page with &lt;code class=&quot;highlighter-rouge&quot;&gt;window.reload&lt;/code&gt; or a html meta tag but the user experience isn’t very nice. React Components can use &lt;code class=&quot;highlighter-rouge&quot;&gt;intervals&lt;/code&gt; to periodically update content so I went with that approach:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// on page load&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;componentWillMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// updates every 10 seconds&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intervalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intervalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;The project contains the file &lt;code class=&quot;highlighter-rouge&quot;&gt;example.json&lt;/code&gt; which ca be used to update the list of services.&lt;/p&gt;

&lt;p&gt;At this point you can only edit the following:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Field&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;service.name&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Service Name displayed in the dashboard panel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;service.measurements&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An array of measurements for display under the service panel. These are typically of the form &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;Name&quot;:&quot;Value&quot;}&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;service.trends&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An array of trends for display under the service panel. These are typically of the form &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;Type&quot;: &quot;Value&quot;}&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; here can be “UP” or “DOWN” in order to display the corresponding icon.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;example-json-file&quot;&gt;Example json file:&lt;/h4&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;services&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Service 0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;measurements&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Submissions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;49&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;trends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Service 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;measurements&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;trends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="React" /><category term="Axios" /><category term="Python" /><summary type="html">Recently I needed to build a custom monitoring dashboard to present some realtime system updates. The dashboard interface needed to be flexible and maintainable in order to be customised.</summary></entry><entry><title type="html">AWS Shared Responsibility Model</title><link href="https://m-x-k.github.io/aws/AWS-Shared-Responsibility-Model/" rel="alternate" type="text/html" title="AWS Shared Responsibility Model" /><published>2018-01-01T13:40:00+00:00</published><updated>2018-01-01T13:40:00+00:00</updated><id>https://m-x-k.github.io/aws/AWS-Shared-Responsibility-Model</id><content type="html" xml:base="https://m-x-k.github.io/aws/AWS-Shared-Responsibility-Model/">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Area&lt;/th&gt;
      &lt;th&gt;Responsibility&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;User Data&lt;/td&gt;
      &lt;td&gt;Organisation&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Application&lt;/td&gt;
      &lt;td&gt;Organisation&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Guest OS&lt;/td&gt;
      &lt;td&gt;Organisation&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Hypervisor&lt;/td&gt;
      &lt;td&gt;AWS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Network&lt;/td&gt;
      &lt;td&gt;AWS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Physical&lt;/td&gt;
      &lt;td&gt;AWS&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;p&gt;The top three areas &lt;code class=&quot;highlighter-rouge&quot;&gt;User Data&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Application&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Guest OS&lt;/code&gt; are all the responsibility of the organisation using AWS. Typically you would think of these three areas as the EC2 service. Below these areas organisation data is not visible to AWS which helps to ensure that your customer data is protected.&lt;/p&gt;

&lt;h3 id=&quot;aws-compliance&quot;&gt;AWS Compliance&lt;/h3&gt;

&lt;p&gt;The areas of the Shared Responsibility Model that are not visible to the organisation using AWS are regularly checked as part of compliance.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/compliance&quot;&gt;AWS Compliance&lt;/a&gt; - provides detail from a number of 3rd Party audits that regularly go through the entire AWS stack to ensure compliance&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="AWS" /><category term="SharedResponsibilityModel" /><summary type="html">Area Responsibility User Data Organisation Application Organisation Guest OS Organisation Hypervisor AWS Network AWS Physical AWS</summary></entry><entry><title type="html">Google Cloud Platform - GoLang Example</title><link href="https://m-x-k.github.io/googlecloudplatform/GoogleCloudPlatform-Go-Example/" rel="alternate" type="text/html" title="Google Cloud Platform - GoLang Example" /><published>2018-01-01T12:40:00+00:00</published><updated>2018-01-01T12:40:00+00:00</updated><id>https://m-x-k.github.io/googlecloudplatform/GoogleCloudPlatform-Go-Example</id><content type="html" xml:base="https://m-x-k.github.io/googlecloudplatform/GoogleCloudPlatform-Go-Example/">&lt;h2 id=&quot;google-cloud-platform-hello-world-example-with-golang&quot;&gt;Google Cloud Platform Hello World example with GoLang&lt;/h2&gt;

&lt;p&gt;For some time now I’ve been tempted to spend some time learning the Google Cloud Platform for developing my own projects. With so many cloud platform solutions out there it can be difficult to know where best to invest your free learning time. However if you can step back from trying to learn new languages and frameworks you might find that many of the Cloud Platforms out there already offer great tutorials to help you get setup quickly. In this post I will be attempting to follow the Google Cloud Platform tutorial for a simple GoLang application in an attempt to get better up to speed with developing both GoLang and the Google Cloud Platform.&lt;/p&gt;

&lt;h3 id=&quot;initial-setup&quot;&gt;Initial setup:&lt;/h3&gt;

&lt;p&gt;After the initial Google Cloud Platform account setup you will be prompted with a tutorial to get started on the app engine. The entire process can take some time so you will probably need to make notes and come back every once in a while.&lt;/p&gt;

&lt;h3 id=&quot;using-the-github-example-project&quot;&gt;Using the github example project&lt;/h3&gt;

&lt;p&gt;The tutorial will take you through steps where you copy and paste commands similar to the following into the Google Cloud Shell:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;TUTORIALDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;src/mywebsite-1045/go_gae_quickstart-2018-01-02-15-49
git clone https://github.com/GoogleCloudPlatform/appengine-guestbook-go.git &lt;span class=&quot;nv&quot;&gt;$TUTORIALDIR&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TUTORIALDIR&lt;/span&gt;
git checkout part1-helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;

  &lt;p&gt;The above example just takes the default hello world example but you can of course &lt;a href=&quot;https://github.com/GoogleCloudPlatform/appengine-guestbook-go#fork-destination-box&quot;&gt;fork this implementation&lt;/a&gt; and substitute the endpoints with your forked project to generate your own example. Just remember that there are different branches used here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;google-cloud-shell&quot;&gt;Google Cloud Shell&lt;/h3&gt;

&lt;p&gt;The Google Cloud Shell is a web console which is authorised to your account. This is convenient for first time setup and tutorials but before long you will want to get your favourite terminal setup to work with the &lt;a href=&quot;https://cloud.google.com/sdk/gcloud/&quot;&gt;gcloud&lt;/a&gt; command.&lt;/p&gt;

&lt;p&gt;In order to install &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud&lt;/code&gt; locally you will need to &lt;a href=&quot;https://cloud.google.com/sdk/downloads&quot;&gt;install and initialise the Google Cloud SDK&lt;/a&gt;. I would recommend using the interactive installer for developer machine setup just be careful to choose the correct terminal profile. The default for me was &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt; but I still had to source it to get it to work properly after the initiate step: &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.bash_profile&lt;/code&gt;. If you have set this up correctly to your Google Cloud Project and user account you should be able to start running commands like the following:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcloud &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
gcloud projects list
gcloud app describe
gcloud app logs &lt;span class=&quot;nb&quot;&gt;read
&lt;/span&gt;gcloud app instances list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;go-hello-world-example&quot;&gt;Go Hello World Example&lt;/h3&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;kubernetes-yaml-configuration&quot;&gt;Kubernetes yaml configuration:&lt;/h3&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;api_version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;go1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;handlers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/.*&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_go_app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;execute-hello-world-go-example-application&quot;&gt;Execute Hello World Go Example application&lt;/h3&gt;

&lt;h4 id=&quot;temporary-deployment-for-development-testing&quot;&gt;Temporary deployment for development testing:&lt;/h4&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;goapp serve app.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;google-cloud-platform-web-preview&quot;&gt;&lt;a href=&quot;https://cloud.google.com/shell/docs/features#web_preview&quot;&gt;Google Cloud Platform Web Preview&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Once you have the application up and running the tutorial prompts the use to open up the &lt;code class=&quot;highlighter-rouge&quot;&gt;Web Preview&lt;/code&gt; which will provide temporary routing to your web application via your browser and the &lt;code class=&quot;highlighter-rouge&quot;&gt;Cloud Shell proxy service&lt;/code&gt;. There is an implicit restriction on this proxy service to only allow HTTP requests over the port range &lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;8084&lt;/code&gt;. Its also worth mentioning that by default the speed of access is limited unless you enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;Boost Mode&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;deployment&quot;&gt;Deployment:&lt;/h4&gt;

&lt;p&gt;You can deploy the example application via Google Shell by executing:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;goapp deploy &lt;span class=&quot;nt&quot;&gt;-application&lt;/span&gt; mywebsite-1045 &lt;span class=&quot;nt&quot;&gt;-version&lt;/span&gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The tutorial will display the application url for you but you can also get it from your local machine using:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcloud app browse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;The Google Cloud tutorials are very well structured for new developers. Everything is step-by-step focused to constantly build on your experience. There are some complex concepts to get up to speed on such as Kubernetes, Cloud Shell and installing and configuring the SDK tools on your local machine but the process is fairly straightforward to anyone with a bit of development or DevOps experience. However it does feel like there is a lot content that you will need to master and therefore you will need to set aside quite a bit of time to get to grips with everything.&lt;/p&gt;

&lt;p&gt;The next tutorials I’m planning to look at should cover the &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Cloud Datastore&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Cloud Storage&lt;/code&gt; which hopefully will provide some useful insights for building and deploying my own Go web based application via the Google Cloud Platform.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="GoogleCloudPlatform" /><category term="Go" /><category term="GoLang" /><summary type="html">Google Cloud Platform Hello World example with GoLang</summary></entry><entry><title type="html">AWS IAM Overview</title><link href="https://m-x-k.github.io/aws/AWS-IAM-Overview/" rel="alternate" type="text/html" title="AWS IAM Overview" /><published>2018-01-01T12:40:00+00:00</published><updated>2018-01-01T12:40:00+00:00</updated><id>https://m-x-k.github.io/aws/AWS-IAM-Overview</id><content type="html" xml:base="https://m-x-k.github.io/aws/AWS-IAM-Overview/">&lt;p&gt;Over at the AWS Training center they provide a set of tutorials, which in some cases are free.
I recently registered to and watched the IAM tutorial &lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication and Authorization with AWS Identity and Access Management&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In an attempt to capture some of the detail for future reference and learning I have provided the following synopsis:&lt;/p&gt;

&lt;h3 id=&quot;user&quot;&gt;User:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Represent permanent accounts for a user&lt;/li&gt;
  &lt;li&gt;Will remain in place until a forced rotation: e.g. a change to the user name, password, Access Key …&lt;/li&gt;
  &lt;li&gt;Provides authentication for named users in the system&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;group&quot;&gt;Group:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A collection of users&lt;/li&gt;
  &lt;li&gt;Users can belong to many groups (i.e. Many-to-Many association)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;role&quot;&gt;Role:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Roles are not permissions!!!&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;A role is an &lt;code class=&quot;highlighter-rouge&quot;&gt;Operator&lt;/code&gt;. This could be human or machine&lt;/li&gt;
  &lt;li&gt;A role provides an &lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication Method&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Roles are Temporary!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;policy-doc&quot;&gt;Policy Doc:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;This is the Authorization process&lt;/li&gt;
  &lt;li&gt;Policy Docs attach to any of:
    &lt;ul&gt;
      &lt;li&gt;Permanent &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Group&lt;/code&gt; APIs&lt;/li&gt;
      &lt;li&gt;Role&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Policy Doc performs validation against those credentials to ensure the User, Role, Group exist&lt;/li&gt;
  &lt;li&gt;All API actions are checked against the Policy Docs to see if the action is allowed to proceed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img style=&quot;width: 50%;&quot; src=&quot;/assets/images/postimage/UserGroupRolePolicyDocs.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;additional-points-to-note&quot;&gt;Additional points to note:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;In AWS everything is an API&lt;/li&gt;
  &lt;li&gt;Every API action is recorded in Cloud Trail. This includes successes or failures. For example if a user attempts to stop a running image with revoked credentials this will be recorded&lt;/li&gt;
  &lt;li&gt;System Admin’s can remove / disable Policy Docs across all Users, Groups, Roles in the event of compromised credentials being used to perform an attack against your systems&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;What impressed me was the way that the content was delivered in this tutorial.
The course presenter &lt;code class=&quot;highlighter-rouge&quot;&gt;Blaine Sundrud&lt;/code&gt; working against a dark backdrop to provide an overview from the reverse angle of the viewer. You can find more free online AWS developer tutorials &lt;a href=&quot;https://aws.amazon.com/training/path-developing/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="AWS" /><category term="IAM" /><summary type="html">Over at the AWS Training center they provide a set of tutorials, which in some cases are free. I recently registered to and watched the IAM tutorial Authentication and Authorization with AWS Identity and Access Management.</summary></entry><entry><title type="html">AWS App Services and Dev Tools Overview</title><link href="https://m-x-k.github.io/aws/AWS-Application-Services-Tutorial/" rel="alternate" type="text/html" title="AWS App Services and Dev Tools Overview" /><published>2018-01-01T11:40:00+00:00</published><updated>2018-01-01T11:40:00+00:00</updated><id>https://m-x-k.github.io/aws/AWS-Application-Services-Tutorial</id><content type="html" xml:base="https://m-x-k.github.io/aws/AWS-Application-Services-Tutorial/">&lt;h2 id=&quot;aws-api-gateway&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/api-gateway&quot;&gt;AWS API Gateway&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A fully managed service to assist developers when creating, publishing, maintaining, monitoring, and securing APIs at scale.&lt;/p&gt;

&lt;p&gt;Organisations can leverage this API Gateway to gain access to application specific API’s. This can be used for public facing API’s or restricted access to for instance background services.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Benefit&lt;/th&gt;
      &lt;th&gt;Detail&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Performance at scale&lt;/td&gt;
      &lt;td&gt;Traffic management, throttling rules etc …&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Monitoring&lt;/td&gt;
      &lt;td&gt;Monitor traffic, latency, error rates&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Streamline API&lt;/td&gt;
      &lt;td&gt;Run multiple API versions at the same time&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Security Controls&lt;/td&gt;
      &lt;td&gt;Various API Authorisation mechanisms supported&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serverless support&lt;/td&gt;
      &lt;td&gt;Ability to utilise AWS Lambda functions without the need for expensive server resource&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;aws-step-functions&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/step-functions&quot;&gt;AWS Step Functions&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Step Functions are based on the concepts of tasks and state machines.&lt;/li&gt;
  &lt;li&gt;You define state machines using the JSON-based Amazon States Language&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Comment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World Example&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;StartAt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HelloWorld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;States&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HelloWorld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:lambda:REGION:ACCOUNT_ID:function:FUNCTION_NAME&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;End&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;

  &lt;p&gt;This provides a convenient orchestration tool for complex workflow systems. Especially if those workflows  change frequently over time. Hopefully tools like this can have a positive impact over those older enterprise workflow systems. Only time will tell if teams will continue to have a sense of ownership of the product development here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;aws-developer-tools&quot;&gt;AWS Developer Tools&lt;/h2&gt;

&lt;p&gt;Includes:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;AWS Developer Tool&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/codepipeline/&quot;&gt;Code Pipeline&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;release automation service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/codecommit/&quot;&gt;Code Commit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;source control service leveraging private Git repositories with secure commits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/codebuild/&quot;&gt;Code Build&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;build and test execution service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/codedeploy/&quot;&gt;Code Deploy&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;deployment orchestration service&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://aws.amazon.com/codestar/&quot;&gt;Code Star&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;continuous delivery toolchain service&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Using the above Developer Tools AWS suggest that businesses can benefit form the same release cycle for Continuous Delivery that they follow. In order to deliver faster customer releases and get continuous feedback.&lt;/p&gt;

&lt;h3 id=&quot;is-it-worth-the-effort&quot;&gt;Is it worth the effort?&lt;/h3&gt;

&lt;p&gt;In most software development companies each of those developer tools would probably already exist in some form. Whether it be Git source control or pipelines using software like Jenkins or TravisCI. Many development teams may not want to fully align to the AWS development suite just to achieve that ultimate Continuous Delivery goal. After all the more these tools are used the more your business will be locked into the AWS products suite lifecycle. Ultimately the question still remains &lt;code class=&quot;highlighter-rouge&quot;&gt;Whats in it for us?&lt;/code&gt; and thats a question really for the development team members so that they can take responsibility.&lt;/p&gt;

&lt;p&gt;When assessing these developer tools in your own organisation a good place to start would be to look at what products your development teams are supporting:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Check&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Do you have any public facing systems? (current/future)&lt;/td&gt;
      &lt;td&gt;&lt;input id=&quot;checkBox&quot; type=&quot;checkbox&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Do you have any internal systems? (current/future)&lt;/td&gt;
      &lt;td&gt;&lt;input id=&quot;checkBox&quot; type=&quot;checkbox&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;You you have any Open Sourced code? (current/future)&lt;/td&gt;
      &lt;td&gt;&lt;input id=&quot;checkBox&quot; type=&quot;checkbox&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Do you require any coordinated application deployments?&lt;/td&gt;
      &lt;td&gt;&lt;input id=&quot;checkBox&quot; type=&quot;checkbox&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Do you have other development tools not supported out-of-the-box by the AWS Developer Tools?&lt;/td&gt;
      &lt;td&gt;&lt;input id=&quot;checkBox&quot; type=&quot;checkbox&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You will likely have additional questions specific to your organisation and ultimately unless you are a startup organisation you will need to assess the time it will take to migrate to use the AWS Developer Tools. If you can start with one system you should be able to predict the time it will take to migrate the others.&lt;/p&gt;

&lt;p&gt;Once you have a better idea of any possible negative impact its worth assessing what benefits this is going to bring to your organisation over your current setup. A single product tool set should in theory be quicker to setup and work with. Also the ability to secure access to your code and deployment configuration would give a stronger argument towards using an all-in-one solution. I particularly like the additional security features provided by the likes of &lt;code class=&quot;highlighter-rouge&quot;&gt;Code Commit&lt;/code&gt; and the option to use Git Hooks to trigger Push Notifications and AWS Lambda functions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;a-word-of-caution&quot;&gt;A word of caution:&lt;/h4&gt;
&lt;p&gt;At this point I wish I could say one way or another whether these tools can live up to the hype. Amazon use them internally so they should already be tried and tested. Most organisations I know are only investing in them for deployment of their AWS Lambda functions but not for their more complex applications.&lt;/p&gt;

&lt;p&gt;Personally I would urge some caution when depending on too many different deployment tools within your organisation in order to avoid unnecessary complexity and confusion and over time. Otherwise it could leave your organisation with a lot of potential technical debt to sort out down the line.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="AWS" /><category term="DeveloperTools" /><summary type="html">AWS API Gateway</summary></entry><entry><title type="html">Java 9 Collection Literals</title><link href="https://m-x-k.github.io/java/Java-9-Collection-Literals/" rel="alternate" type="text/html" title="Java 9 Collection Literals" /><published>2017-12-30T11:40:00+00:00</published><updated>2017-12-30T11:40:00+00:00</updated><id>https://m-x-k.github.io/java/Java-9-Collection-Literals</id><content type="html" xml:base="https://m-x-k.github.io/java/Java-9-Collection-Literals/">&lt;p&gt;An outline of some of the Java 9 changes to Collection literals and other areas of the core API.&lt;/p&gt;

&lt;h2 id=&quot;listof-and-setof&quot;&gt;List.of and Set.of&lt;/h2&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8191&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;131871&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;points-to-note&quot;&gt;Points to note:&lt;/h3&gt;

&lt;h4 id=&quot;similarities-to-java-8-streams&quot;&gt;Similarities to Java 8 Streams&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;We already came across the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; function in Java 8 when we seen &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream.of&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;null-not-supported&quot;&gt;Null not supported&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;It’s also not allowed to insert a null value into the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; function as this is the preferred coding-style these days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;immutable-object-returned&quot;&gt;Immutable object returned&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;It should also be noted here that while similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;Arrays.asList&lt;/code&gt; the objects returned by the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; functions here are &lt;code class=&quot;highlighter-rouge&quot;&gt;immutable&lt;/code&gt;. As a result if you try to &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; or modify the collection you will get an &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.UnsupportedOperationException&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mapof&quot;&gt;Map.of&lt;/h2&gt;

&lt;p&gt;The new &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of&lt;/code&gt; function is follows the api structure &lt;code class=&quot;highlighter-rouge&quot;&gt;static &amp;lt;E&amp;gt; List&amp;lt;E&amp;gt; of(E... elements)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The syntax for using the new &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of&lt;/code&gt; function is as follows:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jshell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jan&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Feb&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;March&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;March&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;points-to-note-1&quot;&gt;Points to note:&lt;/h3&gt;

&lt;h4 id=&quot;varags-syntax-instead-of-mapk-v&quot;&gt;Varags syntax instead of Map&amp;lt;K, V&amp;gt;&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Since the type of &lt;code class=&quot;highlighter-rouge&quot;&gt;Key&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Value&lt;/code&gt; can change we need to use a flat varags structure to represent the data. This can seem odd when looking at data that is difficult to separate such as: &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of(1,1,2,2,3,3)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;null-not-supported-1&quot;&gt;Null not supported&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Again &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; is not supported here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;maximum-of-11-entries&quot;&gt;Maximum of 11 entries&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Over 11 entries will produce an error. To get around this you will need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.ofEntries(Map.Entry ...)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;optional&quot;&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Optional.html&quot;&gt;Optional&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Java 8 introduced the concept of Optional as an operator to help prevent constantly checking for nulls. With Java 9 we now see more enhanced Optional support in the form of:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;New API methods yielding optional values:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HttpClient.authenticator/cookieManager/proxy/sslParameters&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ServiceLoader.findFirst()&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Runtime.version().build/pre/post&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ProcessHandle.of&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ProcessHandle.Info.command/commandLine/arguments/startInstant/totalCpuDuration/user&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New &lt;code class=&quot;highlighter-rouge&quot;&gt;Optional.or()&lt;/code&gt; method:
    &lt;ul&gt;
      &lt;li&gt;If a value is present, returns an Optional describing the value, otherwise returns an Optional produced by the supplying function.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Optional&amp;lt;T&amp;gt; or(Suppplier&amp;lt;? extends Optional&amp;lt;? extends T&amp;gt;&amp;gt; supplier)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Example:
&lt;script src=&quot;https://gist.github.com/f646aea565927c81dbdd953c42ea6258.js&quot;&gt; &lt;/script&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New &lt;code class=&quot;highlighter-rouge&quot;&gt;Optional.stream()&lt;/code&gt; method
    &lt;ul&gt;
      &lt;li&gt;Yields a stream of length 0 or 1&lt;/li&gt;
      &lt;li&gt;Can be useful in place of a stream filter to drop empty results&lt;/li&gt;
      &lt;li&gt;Example: &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&amp;lt;User&amp;gt; users = people.map(Person::name).flatMap(Optional::stream)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a result of the above inclusions it is more common now to see code that no longer requires null checks all over the place. The idea here is to assist development teams to create and maintain cleaner code bases but as a result it is necessary to understand the core Java API better. Making better use of functional programming techniques like Java Streams will help to make the above API changes easier to use in the long run.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;As you can see Java 9 has introduced some useful new functions but in many cases they appear to come with them a number of technical intricacies.&lt;/p&gt;

&lt;p&gt;While the above features do provide syntactical sugar we can only hope that in time they will improve. Perhaps they will begin to serve a foundation for future changes to the core Java language but only time will tell. For the time being they remain useful when programming in a reactive style.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Java 9" /><category term="Collection Literals" /><summary type="html">An outline of some of the Java 9 changes to Collection literals and other areas of the core API.</summary></entry><entry><title type="html">Java 9 JShell overview</title><link href="https://m-x-k.github.io/java/Java-9-JShell-Overview/" rel="alternate" type="text/html" title="Java 9 JShell overview" /><published>2017-12-30T11:40:00+00:00</published><updated>2017-12-30T11:40:00+00:00</updated><id>https://m-x-k.github.io/java/Java-9-JShell-Overview</id><content type="html" xml:base="https://m-x-k.github.io/java/Java-9-JShell-Overview/">&lt;h2 id=&quot;jshell&quot;&gt;JShell&lt;/h2&gt;

&lt;p&gt;Originally introduced as project Kulla, JShell is a great tool for new and experienced developers.&lt;/p&gt;

&lt;p&gt;JShell  is a read-eval-print-loop (REPL) tool which can be used to quickly interact with Java from the command line without the need to compile your code.&lt;/p&gt;

&lt;h3 id=&quot;macos-setup-for-jshell&quot;&gt;MacOS setup for JShell:&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/382cb9a852e4f26f86c9c7267149267d.js&quot;&gt; &lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;You can start up the JShell console via a terminal window session:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jshell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From there you can execute java statements. While it is possible to combine some statements into one line such as a for loop it is preferred practice to got with a more reactive programming style such as java streams. For example:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; import java.util.stream.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
jshell&amp;gt; IntStream.range&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.map&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i -&amp;gt; i &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; i&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.toArray&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; int[10] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 0, 1, 4, 9, 16, 25, 36, 49, 64, 81 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After executing the above you can now use &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt; in future expressions inside the current jshell session.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;JShell is utilimately a great tool for users to explore the core Java API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;printing-with-jshell&quot;&gt;Printing with JShell&lt;/h3&gt;

&lt;p&gt;To support printing with JShell you need to run it with the print option:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jshell &lt;span class=&quot;nt&quot;&gt;--start&lt;/span&gt; DEFAULT &lt;span class=&quot;nt&quot;&gt;--start&lt;/span&gt; PRINTING
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With support for &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; you can now execute statements like the following:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Pi is %.5f&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;, Math.PI&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jshell&amp;gt; println&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Print me!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without the jshell &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; options you will get an error that the method doesn’t exist. You can get around this by creating your own methods but it adds extra effort.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;edit&quot;&gt;Edit&lt;/h3&gt;

&lt;p&gt;Its also possible to edit JShell in a separate java editor by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /edit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you have recently created a method in your session history you can extend this to edit that method:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; void testMe&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
jshell&amp;gt; System.out.println&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;testing&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
jshell&amp;gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
jshell&amp;gt; /edit 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternatively you can switch to your favourite editor with:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /set editor /usr/bin/vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;list&quot;&gt;List&lt;/h3&gt;

&lt;p&gt;It’s also possible to &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; any methods created in your current session:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to list the all of the current imports you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /imports
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;save-and-open&quot;&gt;Save and Open&lt;/h3&gt;

&lt;p&gt;A useful feature in jshell is the &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; commands. If you need to save a snippet source to a file you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /save &amp;lt;FILE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default this will save all commands and snippets currently active in your session. There are several variations that you can use with this such as &lt;code class=&quot;highlighter-rouge&quot;&gt;/save -all | -history | -start&lt;/code&gt;. Each of these will extract a slight variation of your commands which you can find more information on through the jshell help.&lt;/p&gt;

&lt;p&gt;Conversely if you need to &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; files back up again you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /open &amp;lt;FILE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To be honest I which this feature was a little more intuitive. In most cases you will really want to save either methods or one liners in which case it would seem better to me to have a separate set of commands for this. Also I would really like to automatically preload methods/functions for newly created jshell sessions but so far I haven’t found an ideal way to do this.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;help&quot;&gt;Help&lt;/h3&gt;

&lt;p&gt;If you want to find out about other supported commands you can run:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exit&quot;&gt;Exit&lt;/h3&gt;

&lt;p&gt;The preferred way to exit a jshell session is to use:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;shortcuts&quot;&gt;Shortcuts&lt;/h3&gt;

&lt;p&gt;JShell comes with a number of convenient shortcuts designed to make the experience faster for advanced users.&lt;/p&gt;

&lt;h4 id=&quot;shift--tab&quot;&gt;SHIFT + TAB&lt;/h4&gt;

&lt;p&gt;1) Autocomplete variable assignment&lt;/p&gt;

&lt;p&gt;If you create a new variable it will be automatically assigned to a &lt;code class=&quot;highlighter-rouge&quot;&gt;$&amp;lt;NUM&amp;gt;&lt;/code&gt; variable. However you can assign this to your own variable name very quickly by holding down &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIFT + TAB&lt;/code&gt; followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; new Random&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will automatically pre-fill the expression for you and allow you to assign a varaible name of your choice:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; Random &amp;lt;TYPE_YOUR_NAME&amp;gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new Random&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) Find, choose and import&lt;/p&gt;

&lt;p&gt;Type into jshell the name of your package or class and hold down &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIFT + TAB&lt;/code&gt; followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; Duration
0: Do nothing
1: import: java.time.Duration
2: import: javafx.util.Duration
3: import: javax.xml.datatype.Duration
Choice:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can then type which of the above packages you want and it will be imported for you automatically. For example typing &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; for the list above will output:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Imported: java.time.Duration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Java 9" /><category term="JShell" /><summary type="html">JShell</summary></entry><entry><title type="html">Getting started with OpenShift</title><link href="https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift/" rel="alternate" type="text/html" title="Getting started with OpenShift" /><published>2017-12-25T11:40:00+00:00</published><updated>2017-12-25T11:40:00+00:00</updated><id>https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift</id><content type="html" xml:base="https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift/">&lt;h2 id=&quot;openshift&quot;&gt;OpenShift&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;OpenShift provides a convenient abstraction over the concept of containers in the form of a PaaS (Platform as an application Service). At its core it utilises familiar container concepts provided by the likes of Docker and Kubernetes. This typically consists of an Orchestration Framework which can be used to scale applications on-demand based on usage but it also incorporates internal routing and firewall control via the use of application configuration files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As part of this blog entry we will provide a quick overview of the OpenShift features and how to get this up and running on your own development machine using the Open Sourced MiniShift implementation.&lt;/p&gt;

&lt;h2 id=&quot;minishift&quot;&gt;MiniShift&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;The open sourced organisation &lt;code class=&quot;highlighter-rouge&quot;&gt;OpenShift origin&lt;/code&gt; have provided a simple setup in the form of &lt;code class=&quot;highlighter-rouge&quot;&gt;MiniShift&lt;/code&gt;. They have detailed instructions on &lt;a href=&quot;https://docs.openshift.org/latest/minishift/getting-started/installing.html&quot;&gt;how to install MiniShift&lt;/a&gt; but in an attempt to stream line this I will be focusing on the MacOS installation guide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;macos-installation-quick-guide&quot;&gt;MacOS Installation quick guide&lt;/h2&gt;

&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;OS X 10.10.3 Yosemite or later&lt;/li&gt;
  &lt;li&gt;Homebrew - convenient package installer for MacOS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt; - choose the latest &lt;code class=&quot;highlighter-rouge&quot;&gt;OS X host&lt;/code&gt; under VirtualBox platform packages. This should download the latest DMG binary to your machine where you can install it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mist64/xhyve&quot;&gt;xhyve&lt;/a&gt; - a hypervisor required to start the virtual machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup:&lt;/h3&gt;

&lt;p&gt;At the time of writing you can install and setup MiniShift with all the requirements on MacOS for the first time using a basic script like the following:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/77b238f94b158944db4ceb66bec0fc9e.js&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;start-minishift&quot;&gt;Start MiniShift:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  minishift start
  minishift ip                # Get the MiniShift IP Address
  oc login -u system:admin    # Login as admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;oc&quot;&gt;OC:&lt;/h3&gt;

&lt;p&gt;Interaction with OpenShift is with the command line tool oc. To configure and set this up execute the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  eval $(minishift oc-env)    # Setup the OpenShift command line tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sample-application&quot;&gt;Sample application:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  oc new-app https://github.com/openshift/nodejs-ex -l name=myapp     # Deploy a sample app
  oc expose svc/nodejs-ex                                             # Expose a route to the service
  minishift openshift service nodejs-ex --in-browser                  # Open the app in your browser
  oc status                                                           # View project status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;warning&quot;&gt;WARNING&lt;/h4&gt;

&lt;p&gt;&lt;em style=&quot;color: #00adb5; font-size: 80%&quot;&gt;
If you encounter issues loading the sample application in your browser its is possible that the DNS is not resolving correctly. In my case the url “http://dev-python3-myproject.192.168.XX.XX.nip.io” was not resolving due to an issue with &lt;code class=&quot;highlighter-rouge&quot;&gt;nip.io&lt;/code&gt; which provides wildcard support for DNS names. After some investigation it turns out the problem for me was my router which was blocking DNS resolution.
&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em style=&quot;color: #00adb5; font-size: 80%&quot;&gt;
If you encounter this specific issue you can resolve it by updating your machine to use the google DNS server (i.e. 8.8.8.8). In my case all I had to do was edit “/etc/resolv.conf” and replace the nameserver line with “nameserver 8.8.8.8”. You may need to reset this value if it is overwritten so its worth creating a small script to update it. Finally you will probably need to expose the route again in order to get it working.
&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;stop-minishift&quot;&gt;Stop MiniShift:&lt;/h3&gt;

&lt;p&gt;When your finished playing with MiniShift you can stop it easily with the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  minishift stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ok-so-whats-next&quot;&gt;Ok so whats next?&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;Ok so installing a sample app is fairly straightforward but what do we do if we want to take our applications and use a real OpenShift instance in the Cloud. Well luckily cloud providers have started to provide convenient guides on how to set all this up. For instance &lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2017/09/red-hat-openshift-container-platform-on-the-aws-cloud-quick-start-reference-deployment/&quot;&gt;AWS provides a quick overview on their technical blog covering this very topic&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;additional-links&quot;&gt;Additional links:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.openshift.com/&quot;&gt;OpenShift&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.openshift.org/&quot;&gt;OpenShift Origin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.openshift.org/latest/minishift/getting-started/installing.html&quot;&gt;Installing MiniShift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="OpenShift" /><category term="MiniShift" /><category term="Docker" /><summary type="html">OpenShift</summary></entry><entry><title type="html">Python PIP Setup with artifactory</title><link href="https://m-x-k.github.io/python/python-pip-setup-with-artifactory/" rel="alternate" type="text/html" title="Python PIP Setup with artifactory" /><published>2017-12-22T20:00:00+00:00</published><updated>2017-12-22T20:00:00+00:00</updated><id>https://m-x-k.github.io/python/python-pip-setup-with-artifactory</id><content type="html" xml:base="https://m-x-k.github.io/python/python-pip-setup-with-artifactory/">&lt;h2 id=&quot;installing-a-local-artifactory-instance&quot;&gt;Installing a local artifactory instance:&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull docker.bintray.io/jfrog/artifactory-oss:latest
docker run --name artifactory -d -p 8081:8081 docker.bintray.io/jfrog/artifactory-oss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;In browser open http://localhost:8081&lt;/li&gt;
  &lt;li&gt;Add new remote repository: http://localhost:8081/artifactory/webapp/#/admin/repositories/remote
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jfrog.com/confluence/display/RTF/PyPI+Repositories&quot;&gt;Setup your artifactory instance with PyPI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using the remote repositories that you created you should be able to setup your local environment (or container). I usually script this up with something simple like the following:&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/4a6acaea415e6ff112c5980996147fc4.js&quot;&gt; &lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;You can also perform &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install&lt;/code&gt; commands pointed directly if you want to test it. For example:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install --index-url http://localhost:8081/artifactory/api/pypi/repo-pypi-virtual/simple requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Some additional commands can be useful here such as &lt;code class=&quot;highlighter-rouge&quot;&gt;--disable-pip-version-check&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--trusted-host &amp;lt;HOST&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="python" /><category term="artifactory" /><category term="pypi" /><summary type="html">Installing a local artifactory instance:</summary></entry><entry><title type="html">Creating a Blog with Jekyll and GitHub pages</title><link href="https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll/" rel="alternate" type="text/html" title="Creating a Blog with Jekyll and GitHub pages" /><published>2017-12-20T08:50:20+00:00</published><updated>2017-12-20T08:50:20+00:00</updated><id>https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll</id><content type="html" xml:base="https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll/">&lt;h2 id=&quot;steps-to-create-a-sample-blog-created-using-jekyll-and-hosted-on-github&quot;&gt;Steps to create a sample blog created using Jekyll and hosted on GitHub.&lt;/h2&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;

&lt;p&gt;If you want to create a similar blog you can either fork this &lt;a href=&quot;https://github.com/m-x-k/m-x-k.github.io&quot;&gt;implementation&lt;/a&gt; or create a new one by installing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install jekyll&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;jekyll new .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;development&quot;&gt;Development&lt;/h3&gt;

&lt;p&gt;To setup your environment with all the required plugins run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The blog entries can be tested locally using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; and loading &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New blog entries can be added to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt; folder and follow the standard markdown syntax.&lt;/p&gt;

&lt;h3 id=&quot;github-pages&quot;&gt;GitHub pages&lt;/h3&gt;

&lt;p&gt;To view this blog goto: &lt;a href=&quot;https://github.com/USERNAME.github.io&quot;&gt;https://github.com/USERNAME.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A number of the Jekyll plugins will not work by default with GitHub pages. I have noticed a number of issues with pagination when using custom themes. This blog for example uses the minimal &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes&quot;&gt;Minimal Mistakes&lt;/a&gt; plugin which requires pagination for recent posts. At the time of writing &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; isn’t supported by GitHub pages. It is however possible to get unsupported plugins to work via a number of alternative deployment options but the majority of these are quite complex for this introduction tutorial.&lt;/p&gt;

&lt;p&gt;Note: its also possible to use GitLab pages&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;Plugins&lt;/h3&gt;

&lt;p&gt;Jekyll has many useful plugins including for example &lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;jekyll-gist&lt;/a&gt; which allows you to embed gists into your blog entries.&lt;/p&gt;

&lt;h3 id=&quot;additional&quot;&gt;Additional&lt;/h3&gt;

&lt;h4 id=&quot;useful-links&quot;&gt;Useful links&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Jekyll installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/&quot;&gt;GitHub pages help&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/viewing-jekyll-build-error-messages/&quot;&gt;GitHub pages error messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Jekyll" /><category term="GitHub" /><summary type="html">Steps to create a sample blog created using Jekyll and hosted on GitHub.</summary></entry></feed>