<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://m-x-k.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://m-x-k.github.io/" rel="alternate" type="text/html" /><updated>2018-01-01T19:12:59+00:00</updated><id>https://m-x-k.github.io/</id><title type="html">MXK Software Craftmanship</title><subtitle>Software craftmanship solutions covering various areas of Development, Architecture, Testing, Extreme Programming, Agile and DevOps.</subtitle><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><entry><title type="html">AWS IAM Overview</title><link href="https://m-x-k.github.io/aws/AWS-IAM-Tutorial/" rel="alternate" type="text/html" title="AWS IAM Overview" /><published>2018-01-01T11:40:00+00:00</published><updated>2018-01-01T11:40:00+00:00</updated><id>https://m-x-k.github.io/aws/AWS-IAM-Tutorial</id><content type="html" xml:base="https://m-x-k.github.io/aws/AWS-IAM-Tutorial/">&lt;p&gt;Over at the AWS Training center they provide a set of tutorials, which in some cases are free.
I recently registered to and watched the IAM tutorial &lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication and Authorization with AWS Identity and Access Management&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In an attempt to capture some of the detail for future reference and learning I have provided the following synopsis:&lt;/p&gt;

&lt;h3 id=&quot;user&quot;&gt;User:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Represent permanent accounts for a user&lt;/li&gt;
  &lt;li&gt;Will remain in place until a forced rotation: e.g. a change to the user name, password, Access Key …&lt;/li&gt;
  &lt;li&gt;Provides authentication for named users in the system&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;group&quot;&gt;Group:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A collection of users&lt;/li&gt;
  &lt;li&gt;Users can belong to many groups (i.e. Many-to-Many association)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;role&quot;&gt;Role:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Roles are not permissions!!!&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;A role is an &lt;code class=&quot;highlighter-rouge&quot;&gt;Operator&lt;/code&gt;. This could be human or machine&lt;/li&gt;
  &lt;li&gt;A role provides an &lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication Method&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Roles are Temporary!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;policy-doc&quot;&gt;Policy Doc:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;This is the Authorization process&lt;/li&gt;
  &lt;li&gt;Policy Docs attach to any of:
    &lt;ul&gt;
      &lt;li&gt;Permanent &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Group&lt;/code&gt; APIs&lt;/li&gt;
      &lt;li&gt;Role&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Policy Doc performs validation against those credentials to ensure the User, Role, Group exist&lt;/li&gt;
  &lt;li&gt;All API actions are checked against the Policy Docs to see if the action is allowed to proceed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img style=&quot;width: 50%;&quot; src=&quot;/assets/images/postimage/UserGroupRolePolicyDocs.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;additional-points-to-note&quot;&gt;Additional points to note:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;In AWS everything is an API&lt;/li&gt;
  &lt;li&gt;Every API action is recorded in Cloud Trail. This includes successes or failures. For example if a user attempts to stop a running image with revoked credentials this will be recorded&lt;/li&gt;
  &lt;li&gt;System Admin’s can remove / disable Policy Docs across all Users, Groups, Roles in the event of compromised credentials being used to perform an attack against your systems&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;What impressed me was the way that the content was delivered in this tutorial.
The course presenter &lt;code class=&quot;highlighter-rouge&quot;&gt;Blaine Sundrud&lt;/code&gt; working against a dark backdrop to provide an overview from the reverse angle of the viewer. You can find more free online AWS developer tutorials &lt;a href=&quot;https://aws.amazon.com/training/path-developing/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="AWS" /><category term="IAM" /><summary type="html">Over at the AWS Training center they provide a set of tutorials, which in some cases are free. I recently registered to and watched the IAM tutorial Authentication and Authorization with AWS Identity and Access Management.</summary></entry><entry><title type="html">Java 9 Collection Literals</title><link href="https://m-x-k.github.io/java/Java-9-Collection-Literals/" rel="alternate" type="text/html" title="Java 9 Collection Literals" /><published>2017-12-30T11:40:00+00:00</published><updated>2017-12-30T11:40:00+00:00</updated><id>https://m-x-k.github.io/java/Java-9-Collection-Literals</id><content type="html" xml:base="https://m-x-k.github.io/java/Java-9-Collection-Literals/">&lt;h2 id=&quot;listof-and-setof&quot;&gt;List.of and Set.of&lt;/h2&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8191&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;131871&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;points-to-note&quot;&gt;Points to note:&lt;/h3&gt;

&lt;h4 id=&quot;similarities-to-java-8-streams&quot;&gt;Similarities to Java 8 Streams&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;We already came across the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; function in Java 8 when we seen &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream.of&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;null-not-supported&quot;&gt;Null not supported&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;It’s also not allowed to insert a null value into the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; function as this is the preferred coding-style these days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;immutable-object-returned&quot;&gt;Immutable object returned&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;It should also be noted here that while similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;Arrays.asList&lt;/code&gt; the objects returned by the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; functions here are &lt;code class=&quot;highlighter-rouge&quot;&gt;immutable&lt;/code&gt;. As a result if you try to &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; or modify the collection you will get an &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.UnsupportedOperationException&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mapof&quot;&gt;Map.of&lt;/h2&gt;

&lt;p&gt;The new &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of&lt;/code&gt; function is follows the api structure &lt;code class=&quot;highlighter-rouge&quot;&gt;static &amp;lt;E&amp;gt; List&amp;lt;E&amp;gt; of(E... elements)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The syntax for using the new &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of&lt;/code&gt; function is as follows:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jshell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jan&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Feb&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;March&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Feb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;March&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;points-to-note-1&quot;&gt;Points to note:&lt;/h3&gt;

&lt;h4 id=&quot;varags-syntax-instead-of-mapk-v&quot;&gt;Varags syntax instead of Map&amp;lt;K, V&amp;gt;&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Since the type of &lt;code class=&quot;highlighter-rouge&quot;&gt;Key&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Value&lt;/code&gt; can change we need to use a flat varags structure to represent the data. This can seem odd when looking at data that is difficult to separate such as: &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.of(1,1,2,2,3,3)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;null-not-supported-1&quot;&gt;Null not supported&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Again &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; is not supported here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;maximum-of-11-entries&quot;&gt;Maximum of 11 entries&lt;/h4&gt;
&lt;blockquote&gt;

  &lt;p&gt;Over 11 entries will produce an error. To get around this you will need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;Map.ofEntries(Map.Entry ...)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;As you can see Java 9 has introduced some useful new functions but in many cases they appear to come with them a number of technical intricacies.&lt;/p&gt;

&lt;p&gt;While the above features do provide syntactical sugar we can only hope that in time they will improve. Perhaps they will begin to serve a foundation for future changes to the core Java language but only time will tell. For the time being they remain useful when programming in a reactive style.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Java 9" /><category term="Collection Literals" /><summary type="html">List.of and Set.of</summary></entry><entry><title type="html">Java 9 JShell overview</title><link href="https://m-x-k.github.io/java/Java-9-JShell-Overview/" rel="alternate" type="text/html" title="Java 9 JShell overview" /><published>2017-12-30T11:40:00+00:00</published><updated>2017-12-30T11:40:00+00:00</updated><id>https://m-x-k.github.io/java/Java-9-JShell-Overview</id><content type="html" xml:base="https://m-x-k.github.io/java/Java-9-JShell-Overview/">&lt;h2 id=&quot;jshell&quot;&gt;JShell&lt;/h2&gt;

&lt;p&gt;Originally introduced as project Kulla, JShell is a great tool for new and experienced developers.&lt;/p&gt;

&lt;p&gt;JShell  is a read-eval-print-loop (REPL) tool which can be used to quickly interact with Java from the command line without the need to compile your code.&lt;/p&gt;

&lt;h3 id=&quot;macos-setup-for-jshell&quot;&gt;MacOS setup for JShell:&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/382cb9a852e4f26f86c9c7267149267d.js&quot;&gt; &lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;You can start up the JShell console via a terminal window session:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jshell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From there you can execute java statements. While it is possible to combine some statements into one line such as a for loop it is preferred practice to got with a more reactive programming style such as java streams. For example:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; import java.util.stream.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
jshell&amp;gt; IntStream.range&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0, 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.map&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;i -&amp;gt; i &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; i&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.toArray&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; int[10] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 0, 1, 4, 9, 16, 25, 36, 49, 64, 81 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After executing the above you can now use &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt; in future expressions inside the current jshell session.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;JShell is utilimately a great tool for users to explore the core Java API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;printing-with-jshell&quot;&gt;Printing with JShell&lt;/h3&gt;

&lt;p&gt;To support printing with JShell you need to run it with the print option:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jshell &lt;span class=&quot;nt&quot;&gt;--start&lt;/span&gt; DEFAULT &lt;span class=&quot;nt&quot;&gt;--start&lt;/span&gt; PRINTING
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With support for &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; you can now execute statements like the following:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Pi is %.5f&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;, Math.PI&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
jshell&amp;gt; println&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Print me!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without the jshell &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; options you will get an error that the method doesn’t exist. You can get around this by creating your own methods but it adds extra effort.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;edit&quot;&gt;Edit&lt;/h3&gt;

&lt;p&gt;Its also possible to edit JShell in a separate java editor by typing:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /edit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you have recently created a method in your session history you can extend this to edit that method:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; void testMe&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
jshell&amp;gt; System.out.println&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;testing&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
jshell&amp;gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
jshell&amp;gt; /edit 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternatively you can switch to your favourite editor with:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /set editor /usr/bin/vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;list&quot;&gt;List&lt;/h3&gt;

&lt;p&gt;It’s also possible to &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; any methods created in your current session:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to list the all of the current imports you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /imports
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;save-and-open&quot;&gt;Save and Open&lt;/h3&gt;

&lt;p&gt;A useful feature in jshell is the &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; commands. If you need to save a snippet source to a file you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /save &amp;lt;FILE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default this will save all commands and snippets currently active in your session. There are several variations that you can use with this such as &lt;code class=&quot;highlighter-rouge&quot;&gt;/save -all | -history | -start&lt;/code&gt;. Each of these will extract a slight variation of your commands which you can find more information on through the jshell help.&lt;/p&gt;

&lt;p&gt;Conversely if you need to &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; files back up again you can execute:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /open &amp;lt;FILE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To be honest I which this feature was a little more intuitive. In most cases you will really want to save either methods or one liners in which case it would seem better to me to have a separate set of commands for this. Also I would really like to automatically preload methods/functions for newly created jshell sessions but so far I haven’t found an ideal way to do this.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;help&quot;&gt;Help&lt;/h3&gt;

&lt;p&gt;If you want to find out about other supported commands you can run:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exit&quot;&gt;Exit&lt;/h3&gt;

&lt;p&gt;The preferred way to exit a jshell session is to use:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; /exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;shortcuts&quot;&gt;Shortcuts&lt;/h3&gt;

&lt;p&gt;JShell comes with a number of convenient shortcuts designed to make the experience faster for advanced users.&lt;/p&gt;

&lt;h4 id=&quot;shift--tab&quot;&gt;SHIFT + TAB&lt;/h4&gt;

&lt;p&gt;1) Autocomplete variable assignment&lt;/p&gt;

&lt;p&gt;If you create a new variable it will be automatically assigned to a &lt;code class=&quot;highlighter-rouge&quot;&gt;$&amp;lt;NUM&amp;gt;&lt;/code&gt; variable. However you can assign this to your own variable name very quickly by holding down &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIFT + TAB&lt;/code&gt; followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; new Random&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will automatically pre-fill the expression for you and allow you to assign a varaible name of your choice:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; Random &amp;lt;TYPE_YOUR_NAME&amp;gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new Random&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) Find, choose and import&lt;/p&gt;

&lt;p&gt;Type into jshell the name of your package or class and hold down &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIFT + TAB&lt;/code&gt; followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jshell&amp;gt; Duration
0: Do nothing
1: import: java.time.Duration
2: import: javafx.util.Duration
3: import: javax.xml.datatype.Duration
Choice:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can then type which of the above packages you want and it will be imported for you automatically. For example typing &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; for the list above will output:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Imported: java.time.Duration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Java 9" /><category term="JShell" /><summary type="html">JShell</summary></entry><entry><title type="html">Getting started with OpenShift</title><link href="https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift/" rel="alternate" type="text/html" title="Getting started with OpenShift" /><published>2017-12-25T11:40:00+00:00</published><updated>2017-12-25T11:40:00+00:00</updated><id>https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift</id><content type="html" xml:base="https://m-x-k.github.io/openshift/minishift/docker/getting-started-with-open-shift/">&lt;h2 id=&quot;openshift&quot;&gt;OpenShift&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;OpenShift provides a convenient abstraction over the concept of containers in the form of a PaaS (Platform as an application Service). At its core it utilises familiar container concepts provided by the likes of Docker and Kubernetes. This typically consists of an Orchestration Framework which can be used to scale applications on-demand based on usage but it also incorporates internal routing and firewall control via the use of application configuration files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As part of this blog entry we will provide a quick overview of the OpenShift features and how to get this up and running on your own development machine using the Open Sourced MiniShift implementation.&lt;/p&gt;

&lt;h2 id=&quot;minishift&quot;&gt;MiniShift&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;The open sourced organisation &lt;code class=&quot;highlighter-rouge&quot;&gt;OpenShift origin&lt;/code&gt; have provided a simple setup in the form of &lt;code class=&quot;highlighter-rouge&quot;&gt;MiniShift&lt;/code&gt;. They have detailed instructions on &lt;a href=&quot;https://docs.openshift.org/latest/minishift/getting-started/installing.html&quot;&gt;how to install MiniShift&lt;/a&gt; but in an attempt to stream line this I will be focusing on the MacOS installation guide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;macos-installation-quick-guide&quot;&gt;MacOS Installation quick guide&lt;/h2&gt;

&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;OS X 10.10.3 Yosemite or later&lt;/li&gt;
  &lt;li&gt;Homebrew - convenient package installer for MacOS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt; - choose the latest &lt;code class=&quot;highlighter-rouge&quot;&gt;OS X host&lt;/code&gt; under VirtualBox platform packages. This should download the latest DMG binary to your machine where you can install it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mist64/xhyve&quot;&gt;xhyve&lt;/a&gt; - a hypervisor required to start the virtual machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup:&lt;/h3&gt;

&lt;p&gt;At the time of writing you can install and setup MiniShift with all the requirements on MacOS for the first time using a basic script like the following:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/77b238f94b158944db4ceb66bec0fc9e.js&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;start-minishift&quot;&gt;Start MiniShift:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  minishift start
  minishift ip                # Get the MiniShift IP Address
  oc login -u system:admin    # Login as admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;oc&quot;&gt;OC:&lt;/h3&gt;

&lt;p&gt;Interaction with OpenShift is with the command line tool oc. To configure and set this up execute the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  eval $(minishift oc-env)    # Setup the OpenShift command line tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sample-application&quot;&gt;Sample application:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  oc new-app https://github.com/openshift/nodejs-ex -l name=myapp     # Deploy a sample app
  oc expose svc/nodejs-ex                                             # Expose a route to the service
  minishift openshift service nodejs-ex --in-browser                  # Open the app in your browser
  oc status                                                           # View project status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;warning&quot;&gt;WARNING&lt;/h4&gt;

&lt;p&gt;&lt;em style=&quot;color: #00adb5; font-size: 80%&quot;&gt;
If you encounter issues loading the sample application in your browser its is possible that the DNS is not resolving correctly. In my case the url “http://dev-python3-myproject.192.168.XX.XX.nip.io” was not resolving due to an issue with &lt;code class=&quot;highlighter-rouge&quot;&gt;nip.io&lt;/code&gt; which provides wildcard support for DNS names. After some investigation it turns out the problem for me was my router which was blocking DNS resolution.
&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em style=&quot;color: #00adb5; font-size: 80%&quot;&gt;
If you encounter this specific issue you can resolve it by updating your machine to use the google DNS server (i.e. 8.8.8.8). In my case all I had to do was edit “/etc/resolv.conf” and replace the nameserver line with “nameserver 8.8.8.8”. You may need to reset this value if it is overwritten so its worth creating a small script to update it. Finally you will probably need to expose the route again in order to get it working.
&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;stop-minishift&quot;&gt;Stop MiniShift:&lt;/h3&gt;

&lt;p&gt;When your finished playing with MiniShift you can stop it easily with the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  minishift stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ok-so-whats-next&quot;&gt;Ok so whats next?&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;Ok so installing a sample app is fairly straightforward but what do we do if we want to take our applications and use a real OpenShift instance in the Cloud. Well luckily cloud providers have started to provide convenient guides on how to set all this up. For instance &lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2017/09/red-hat-openshift-container-platform-on-the-aws-cloud-quick-start-reference-deployment/&quot;&gt;AWS provides a quick overview on their technical blog covering this very topic&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;additional-links&quot;&gt;Additional links:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.openshift.com/&quot;&gt;OpenShift&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.openshift.org/&quot;&gt;OpenShift Origin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.openshift.org/latest/minishift/getting-started/installing.html&quot;&gt;Installing MiniShift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="OpenShift" /><category term="MiniShift" /><category term="Docker" /><summary type="html">OpenShift</summary></entry><entry><title type="html">Python PIP Setup with artifactory</title><link href="https://m-x-k.github.io/python/python-pip-setup-with-artifactory/" rel="alternate" type="text/html" title="Python PIP Setup with artifactory" /><published>2017-12-22T20:00:00+00:00</published><updated>2017-12-22T20:00:00+00:00</updated><id>https://m-x-k.github.io/python/python-pip-setup-with-artifactory</id><content type="html" xml:base="https://m-x-k.github.io/python/python-pip-setup-with-artifactory/">&lt;h2 id=&quot;installing-a-local-artifactory-instance&quot;&gt;Installing a local artifactory instance:&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull docker.bintray.io/jfrog/artifactory-oss:latest
docker run --name artifactory -d -p 8081:8081 docker.bintray.io/jfrog/artifactory-oss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;In browser open http://localhost:8081&lt;/li&gt;
  &lt;li&gt;Add new remote repository: http://localhost:8081/artifactory/webapp/#/admin/repositories/remote
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jfrog.com/confluence/display/RTF/PyPI+Repositories&quot;&gt;Setup your artifactory instance with PyPI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using the remote repositories that you created you should be able to setup your local environment (or container). I usually script this up with something simple like the following:&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/4a6acaea415e6ff112c5980996147fc4.js&quot;&gt; &lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;You can also perform &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install&lt;/code&gt; commands pointed directly if you want to test it. For example:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install --index-url http://localhost:8081/artifactory/api/pypi/repo-pypi-virtual/simple requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Some additional commands can be useful here such as &lt;code class=&quot;highlighter-rouge&quot;&gt;--disable-pip-version-check&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--trusted-host &amp;lt;HOST&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="python" /><category term="artifactory" /><category term="pypi" /><summary type="html">Installing a local artifactory instance:</summary></entry><entry><title type="html">Creating a Blog with Jekyll and GitHub pages</title><link href="https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll/" rel="alternate" type="text/html" title="Creating a Blog with Jekyll and GitHub pages" /><published>2017-12-20T08:50:20+00:00</published><updated>2017-12-20T08:50:20+00:00</updated><id>https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll</id><content type="html" xml:base="https://m-x-k.github.io/jekyll/creating-blog-with-github-pages-and-jekyll/">&lt;h2 id=&quot;steps-to-create-a-sample-blog-created-using-jekyll-and-hosted-on-github&quot;&gt;Steps to create a sample blog created using Jekyll and hosted on GitHub.&lt;/h2&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;

&lt;p&gt;If you want to create a similar blog you can either fork this &lt;a href=&quot;https://github.com/m-x-k/m-x-k.github.io&quot;&gt;implementation&lt;/a&gt; or create a new one by installing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install jekyll&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;jekyll new .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;development&quot;&gt;Development&lt;/h3&gt;

&lt;p&gt;To setup your environment with all the required plugins run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The blog entries can be tested locally using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; and loading &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New blog entries can be added to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt; folder and follow the standard markdown syntax.&lt;/p&gt;

&lt;h3 id=&quot;github-pages&quot;&gt;GitHub pages&lt;/h3&gt;

&lt;p&gt;To view this blog goto: &lt;a href=&quot;https://github.com/USERNAME.github.io&quot;&gt;https://github.com/USERNAME.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A number of the Jekyll plugins will not work by default with GitHub pages. I have noticed a number of issues with pagination when using custom themes. This blog for example uses the minimal &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes&quot;&gt;Minimal Mistakes&lt;/a&gt; plugin which requires pagination for recent posts. At the time of writing &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-paginate-v2&lt;/code&gt; isn’t supported by GitHub pages. It is however possible to get unsupported plugins to work via a number of alternative deployment options but the majority of these are quite complex for this introduction tutorial.&lt;/p&gt;

&lt;p&gt;Note: its also possible to use GitLab pages&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;Plugins&lt;/h3&gt;

&lt;p&gt;Jekyll has many useful plugins including for example &lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;jekyll-gist&lt;/a&gt; which allows you to embed gists into your blog entries.&lt;/p&gt;

&lt;h3 id=&quot;additional&quot;&gt;Additional&lt;/h3&gt;

&lt;h4 id=&quot;useful-links&quot;&gt;Useful links&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Jekyll installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/&quot;&gt;GitHub pages help&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/viewing-jekyll-build-error-messages/&quot;&gt;GitHub pages error messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Jekyll" /><category term="GitHub" /><summary type="html">Steps to create a sample blog created using Jekyll and hosted on GitHub.</summary></entry><entry><title type="html">Presentation slides with Reveal.js</title><link href="https://m-x-k.github.io/javascript/revealjs/Presentation-slides-with-Reveal/" rel="alternate" type="text/html" title="Presentation slides with Reveal.js" /><published>2017-11-21T20:20:41+00:00</published><updated>2017-11-21T20:20:41+00:00</updated><id>https://m-x-k.github.io/javascript/revealjs/Presentation-slides-with-Reveal</id><content type="html" xml:base="https://m-x-k.github.io/javascript/revealjs/Presentation-slides-with-Reveal/">&lt;p&gt;Using the reveal javascript library its possible to build intricate presentation slides for the browser. While its possible to create a sample using a web client over at &lt;a href=&quot;https://slides.com/&quot;&gt;https://slides.com/&lt;/a&gt; I personally prefer to download the latest version directly from the github account &lt;a href=&quot;https://github.com/hakimel/reveal.js/releases/latest&quot;&gt;Latest release&lt;/a&gt; in order to generate your slide presentation by hand.&lt;/p&gt;

&lt;p&gt;Steps to get it all up and running:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Create a new folder and extract the latest reveal.js code into a sub-folder called &quot;reveal.js&quot;&lt;/li&gt;
	&lt;li&gt;In the root of your project copy the following html code into a file named index.html&lt;/li&gt;
	&lt;li&gt;Open the index.html file with your browser of choice (note: chrome seems to be the preferred option)&lt;/li&gt;
&lt;/ol&gt;
&lt;script src=&quot;https://gist.github.com/fd6d40367b49bd811d6f99a9065f919a.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;The above sample is just a quick setup to get you going but there are many features in this library that you can take advantage of:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Markdown support using &quot;&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;data-markdown&amp;gt; ...&quot;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;PDF support by going to &quot;?print-pdf&quot; in chrome. The sample above provides support for this using a small javascript tag which makes use of some inbuilt javascript libraries.&lt;/li&gt;
	&lt;li&gt;Hidden notes support using &quot;&amp;lt;section data-separator-notes=...&amp;gt;&quot;&lt;/li&gt;
	&lt;li&gt;Slide data transitions such as &quot;fading&quot; in and out, zooming as well as controlling the speed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more features that you can play about with including embedded videos, images and other multimedia. One feature that particularly interests me is embedding external markdown files. In terms of project development teams would be able to provide customer demos along side your versioned code base. It’s also possible to override the existing css but you may find this to be difficult when using the markdown content due to the way that this is converted by reveal.js on the fly.&lt;/p&gt;

&lt;p&gt;For a quick introduction on other features in the current version 3 release have a look at the following slideshare from the author of Reveal.js Hakim El Hattab:&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/e3ACCuYrg0rSiG&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/hakimel/revealjs-300&quot; title=&quot;reveal.js 3.0.0&quot; target=&quot;_blank&quot;&gt;reveal.js 3.0.0&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/hakimel&quot; target=&quot;_blank&quot;&gt;Hakim El Hattab&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Javascript" /><category term="RevealJS" /><summary type="html">Using the reveal javascript library its possible to build intricate presentation slides for the browser. While its possible to create a sample using a web client over at https://slides.com/ I personally prefer to download the latest version directly from the github account Latest release in order to generate your slide presentation by hand.</summary></entry><entry><title type="html">Useful List Of Python Resources</title><link href="https://m-x-k.github.io/python/Useful-List-Of-Python-Resources/" rel="alternate" type="text/html" title="Useful List Of Python Resources" /><published>2017-11-19T20:00:10+00:00</published><updated>2017-11-19T20:00:10+00:00</updated><id>https://m-x-k.github.io/python/Useful-List-Of-Python-Resources</id><content type="html" xml:base="https://m-x-k.github.io/python/Useful-List-Of-Python-Resources/">&lt;script src=&quot;https://gist.github.com/dda4cd4647375073e01c293cc56640db.js&quot;&gt; &lt;/script&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Python" /><summary type="html"></summary></entry><entry><title type="html">Creating a Gists Webpage With ReactJS</title><link href="https://m-x-k.github.io/javascript/reactjs/Creating-a-Gists-Webpage-With-ReactJS/" rel="alternate" type="text/html" title="Creating a Gists Webpage With ReactJS" /><published>2017-11-13T19:00:00+00:00</published><updated>2017-11-13T19:00:00+00:00</updated><id>https://m-x-k.github.io/javascript/reactjs/Creating-a-Gists-Webpage-With-ReactJS</id><content type="html" xml:base="https://m-x-k.github.io/javascript/reactjs/Creating-a-Gists-Webpage-With-ReactJS/">&lt;p&gt;I decided to build a simple ReactJS webpage to render my personal Gists from GitHub as an basic kata.&lt;/p&gt;

&lt;p&gt;However while the ReactJS part was fairly straightforward I was once again reminded about Cross Site Scripting (XSS) issues when trying to call API’s from another domain using javascript. Thankfully JQuery jsonp still works:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;componentDidMount(){
    $.ajax({
      url: &quot;https://api.github.com/users/m-x-k/gists&quot;,
      jsonp: &quot;$jsonp&quot;
    }).done(function(data) {
      console.log(data);
      this.setState({gists: data});
    }.bind(this));    
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obviously in a production situation this isn’t what we would rely on!!!&lt;/p&gt;

&lt;p&gt;Reverse proxies like Nginx, HAProxy or Apache are much better suited to revolve these types of issues.&lt;/p&gt;

&lt;p&gt;Ideally we would setup a reverse proxy on “api.github.com” so that we can share a common domain for the client side requests. For example if your web page url was http://my.gists.com/index.html you might setup a reverse proxy like http://my.gists.com/api/m-x-k/gists.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: while its possible to mitigate the problem with headers it’s not an ideal solution as it depends on browser support.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://codepen.io/mxk/pen/WEJBbg&quot;&gt;https://codepen.io/mxk/pen/WEJBbg&lt;/a&gt;&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Javascript" /><category term="ReactJS" /><summary type="html">I decided to build a simple ReactJS webpage to render my personal Gists from GitHub as an basic kata.</summary></entry><entry><title type="html">Rapid prototyping with code templates</title><link href="https://m-x-k.github.io/python/cookiecutter/Rapid-prototyping-with-code-templates/" rel="alternate" type="text/html" title="Rapid prototyping with code templates" /><published>2017-11-12T20:00:10+00:00</published><updated>2017-11-12T20:00:10+00:00</updated><id>https://m-x-k.github.io/python/cookiecutter/Rapid-prototyping-with-code-templates</id><content type="html" xml:base="https://m-x-k.github.io/python/cookiecutter/Rapid-prototyping-with-code-templates/">&lt;p&gt;Over the last few years I have been using Python quite a lot to build rapid prototypes. By far the best command line tool I’ve found for this is the python ‘cookiecutter’ project below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/audreyr/cookiecutter&quot;&gt;https://github.com/audreyr/cookiecutter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a large number of &lt;a href=&quot;https://github.com/audreyr/cookiecutter#python&quot;&gt;sample cookiecutter projects&lt;/a&gt; out there but it makes sense to build and maintain your own if you want to get the latest setup.&lt;/p&gt;

&lt;p&gt;For ease of use I have a number of linux command line aliases to create new projects from my own code template projects:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/a849a8b7d2da0f54dc35c4fb9b42983d.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;In some cases these code template projects have been customised to my own preferences with IDE support etc … but for the most part they tend to be fairly vanilla in case other people might find them useful and also to allow me to customise each new project. So for example with Java applications I tend to prefer IntelliJ with Gradle but beyond that for me it doesn’t make sense to preload all of your favourite java libraries.&lt;/p&gt;

&lt;p&gt;In some work places I have noticed a tendency to try and standardise code structure with similar code template tools (e.g. maven archetypes). In many cases this can save project setup time but I tend not to favour this approach. Ideally in agile development teams it is best to reach a group consensus based on the project requirements first and then trying to agree on code standards such as naming, structure etc … A good place to start is often Uncle Bob’s Clean coders book which is widely distributed and possibly combining this with Extreme Programming techniques such as TDD, Pair Programming or Mobbing. This combined approach often gets extremely good results allowing for a wider group consensus and shared ownership.&lt;/p&gt;

&lt;p&gt;However in many situations the first place to start on a project is a quick prototype. It can therefore be convenient to use code templates in these situations. This actually helps to reinforce the concept that code implemented as part of the prototype is ‘temporary’ and therefore should be discarded and reimplemented by the team from scratch.&lt;/p&gt;</content><author><name>Martin Kelly</name><email>mxksolutions@gmail.com</email></author><category term="Python" /><category term="Cookiecutter" /><summary type="html">Over the last few years I have been using Python quite a lot to build rapid prototypes. By far the best command line tool I’ve found for this is the python ‘cookiecutter’ project below:</summary></entry></feed>